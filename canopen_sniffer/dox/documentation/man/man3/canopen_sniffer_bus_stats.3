.TH "bus_stats" 3 "Sat Oct 18 2025" "CANopen-Sniffer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
bus_stats \- Container class for all CANopen bus statistics\&.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
Container class for all CANopen bus statistics\&. 

This class organizes statistical data related to CANopen bus activity\&. It includes nested dataclasses for different categories of metrics such as frame counts, payload sizes, SDO transaction results, and error tracking\&. 
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBerror_stats\fP"
.br
.RI "Tracks error-related information observed on the CANopen bus\&. "
.ti -1c
.RI "class \fBframe_count\fP"
.br
.RI "Tracks the number of frames by CANopen message type\&. "
.ti -1c
.RI "class \fBpayload_size\fP"
.br
.RI "Tracks cumulative payload sizes for key CANopen message types\&. "
.ti -1c
.RI "class \fBsdo_stats\fP"
.br
.RI "Records SDO (Service Data Object) communication statistics\&. "
.ti -1c
.RI "class \fBstats_data\fP"
.br
.RI "Consolidated data record for overall bus statistics\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self)"
.br
.RI "Initialize the \fBbus_stats\fP object and its internal data structures\&. "
.ti -1c
.RI "def \fBadd_node\fP (self, int node_id)"
.br
.RI "Add node to communicating nodes list\&. "
.ti -1c
.RI "def \fBcount_talker\fP (self, int cob_id)"
.br
.RI "Increment TopTalkers counter for a COB-ID\&. "
.ti -1c
.RI "int \fBget_frame_count\fP (self, \fBframe_type\fP ftype)"
.br
.RI "Get counted frames\&. "
.ti -1c
.RI "\fBstats_data\fP \fBget_snapshot\fP (self)"
.br
.RI "Get snapshot of bus stats\&. "
.ti -1c
.RI "int \fBget_total_frames\fP (self)"
.br
.RI "Get total frame count\&. "
.ti -1c
.RI "def \fBincrement_frame\fP (self, \fBframe_type\fP ftype)"
.br
.RI "Increment frame counters by FrameType\&. "
.ti -1c
.RI "def \fBincrement_payload\fP (self, \fBframe_type\fP ftype, int size)"
.br
.RI "Increment payload size counters for PDO/SDO frames\&. "
.ti -1c
.RI "def \fBincrement_sdo_abort\fP (self)"
.br
.RI "Increment the SDO abort counter\&. "
.ti -1c
.RI "def \fBincrement_sdo_success\fP (self)"
.br
.RI "Increment the SDO success counter\&. "
.ti -1c
.RI "def \fBreset\fP (self)"
.br
.RI "Reset bus stats count\&. "
.ti -1c
.RI "def \fBset_start_time\fP (self)"
.br
.RI "Sets the start time parameter of bus stats\&. "
.ti -1c
.RI "def \fBupdate_sdo_request_time\fP (self, int index, int sub)"
.br
.RI "Update the SDO request message time to the deque\&. "
.ti -1c
.RI "def \fBupdate_sdo_response_time\fP (self, int index, int sub)"
.br
.RI "Update the SDO response message time from the deque\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBlog\fP"
.br
.RI "Logger instance used for reporting and debugging\&. "
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def __init__ ( self)"

.PP
Initialize the \fBbus_stats\fP object and its internal data structures\&. This constructor initializes synchronization primitives and prepares the root statistics container used to store CANopen bus statistics\&. A thread lock is used to protect concurrent access to the shared \fC_stats\fP data\&. A logger instance is also created for internal diagnostics and reporting\&. 
.SH "Member Function Documentation"
.PP 
.SS "def add_node ( self, int node_id)"

.PP
Add node to communicating nodes list\&. 
.PP
\fBParameters\fP
.RS 4
\fInode_id\fP Received Node id as integer\&. 
.RE
.PP

.SS "def count_talker ( self, int cob_id)"

.PP
Increment TopTalkers counter for a COB-ID\&. 
.PP
\fBParameters\fP
.RS 4
\fIcob_id\fP COB-ID as integer of top talker to be incremented\&. 
.RE
.PP

.SS " int get_frame_count ( self, \fBframe_type\fP ftype)"

.PP
Get counted frames\&. 
.PP
\fBParameters\fP
.RS 4
\fIftype\fP Frame type \fBframe_type\fP\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Count of frames received as integer\&. 
.RE
.PP

.SS " \fBstats_data\fP get_snapshot ( self)"

.PP
Get snapshot of bus stats\&. 
.PP
\fBReturns\fP
.RS 4
Current bus stats \fBstats_data\fP\&. 
.RE
.PP

.SS " int get_total_frames ( self)"

.PP
Get total frame count\&. 
.PP
\fBReturns\fP
.RS 4
Total counted frames as integer\&. 
.RE
.PP

.SS "def increment_frame ( self, \fBframe_type\fP ftype)"

.PP
Increment frame counters by FrameType\&. 
.PP
\fBParameters\fP
.RS 4
\fIftype\fP Frame type \fBframe_type\fP for incrementing its count\&. 
.RE
.PP
\fBReturns\fP
.RS 4
None\&. 
.RE
.PP

.SS "def increment_payload ( self, \fBframe_type\fP ftype, int size)"

.PP
Increment payload size counters for PDO/SDO frames\&. 
.PP
\fBParameters\fP
.RS 4
\fIftype\fP Frame type \fBframe_type\fP to increment it's size\&. 
.br
\fIsize\fP payload size as integer\&. 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIKeyError\fP : Payload size not tracked\&. 
.RE
.PP

.SS "def increment_sdo_abort ( self)"

.PP
Increment the SDO abort counter\&. 
.SS "def increment_sdo_success ( self)"

.PP
Increment the SDO success counter\&. 
.SS "def reset ( self)"

.PP
Reset bus stats count\&. 
.SS "def set_start_time ( self)"

.PP
Sets the start time parameter of bus stats\&. 
.SS "def update_sdo_request_time ( self, int index, int sub)"

.PP
Update the SDO request message time to the deque\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Index of received message as integer\&. 
.br
\fIsub\fP Sub index of received message as integer\&. 
.RE
.PP

.SS "def update_sdo_response_time ( self, int index, int sub)"

.PP
Update the SDO response message time from the deque\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Index of received message as integer\&. 
.br
\fIsub\fP Sub index of received message as integer\&. 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "log"

.PP
Logger instance used for reporting and debugging\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for CANopen-Sniffer from the source code\&.
